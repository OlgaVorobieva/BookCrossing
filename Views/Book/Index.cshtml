@using BookCrossingApp.Data.Enum
@using BookCrossingApp.Data
@using Microsoft.AspNetCore.Identity

@model IEnumerable<BookCrossingApp.Models.Book>
@inject UserManager<AppUser> UserManager

@{
    ViewData["Title"] = "Index";
    var currentUser = await UserManager.GetUserAsync(User);
    var userRole = await UserManager.GetRolesAsync(currentUser);
}

<h1>Каталог</h1>

<p>
    <a asp-action="Create">Добавить книгу</a>
</p>

<input type="text" id="myInput" placeholder="Поиск по автору и названию...">


@Html.DropDownList("bookCategorie", Html.GetEnumSelectList(typeof(BookCategories)), "Все книги", new { @onchange="filterTable(this.value)", @class="custom-select" })



<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BCID)
            </th>
            <th>
                Назавание
            </th>
            <th>
                Автор
            </th>
            <th>
                Категория
            </th>
            <th>
                Описание
            </th>
            <th>
                Статус
            </th>
            <th>
                Фото
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BCID)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">@item.Title</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    <img alt="Image" src="/img/@item.PictureName" width="80" height="100">
                </td>

                <td>
                    @if (item.Status != BookStatus.OnMap && item.CreatorUserId == currentUser.Id)
                    {
                        <a asp-action="PlaceBook" asp-route-id="@item.Id">Разместить</a>
                    }
                </td>
                <td>
                    @if (item.CreatorUserId == currentUser.Id)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Изменить</a>
                    }
                </td>
                <td>
                    @if (userRole.FirstOrDefault() == UserRoles.Admin)
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                    }
                </td>

            </tr>
        }
    </tbody>
</table>
<script>
    function filterTable(event) {
        var filter = document.querySelector('#myInput').value.toUpperCase();
        var bookCategorie = document.querySelector("#bookCategorie");
        var filterStatus = bookCategorie.options[bookCategorie.selectedIndex].innerText.toUpperCase();
        var rows = document.querySelector("#myTable tbody").rows;

        for (var i = 0; i < rows.length; i++) {
            var firstCol = rows[i].cells[1].textContent.toUpperCase();
            var secondCol = rows[i].cells[2].textContent.toUpperCase();
            var fifthCol = rows[i].cells[3].textContent.toUpperCase();
            if ((firstCol.indexOf(filter) > -1 || secondCol.indexOf(filter) > -1) && (filterStatus == "ВСЕ КНИГИ" || fifthCol.indexOf(filterStatus) > -1)) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    }

    document.querySelector('#myInput').addEventListener('keyup', filterTable, false);

           // document.querySelector('#bookStatus').addEventListener('onselect', filterTable, false);


</script>